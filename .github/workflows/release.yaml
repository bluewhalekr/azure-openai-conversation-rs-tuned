name: Auto Version Bump and Release

on:
  push:
    branches:
      - main
    paths:
      - 'custom_components/openai_conversation_for_rs/**'
      - README.md
      - hacs.json

jobs:
  version-bump-and-release:
    runs-on: azure-openai-conversation-rs-tuned
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest tag
        id: get-latest-tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: Bump patch version
        id: bump-version
        run: |
          # Parse version components
          version=${LATEST_TAG#v}
          major=$(echo $version | cut -d. -f1)
          minor=$(echo $version | cut -d. -f2)
          patch=$(echo $version | cut -d. -f3)
          
          # Increment patch version
          new_patch=$((patch + 1))
          new_version="v$major.$minor.$new_patch"
          
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
          echo "Previous version: $LATEST_TAG"
          echo "New version: $new_version"

      - name: Create and push tag
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag -a ${{ env.NEW_VERSION }} -m "Release ${{ env.NEW_VERSION }}"
          git push origin ${{ env.NEW_VERSION }}

      - name: Generate changelog
        id: changelog
        run: |
          # Get commits since last tag
          changelog=$(git log ${{ env.LATEST_TAG }}..HEAD --pretty=format:"- %s" --no-merges)
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$changelog" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_VERSION }}
          name: Release ${{ env.NEW_VERSION }}
          body: |
            ## What's Changed
            ${{ env.CHANGELOG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}